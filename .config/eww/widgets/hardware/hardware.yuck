(defvar hw_graph "cpu")

(defwidget hardware-graph [name value label]
  (revealer
    :reveal {name == hw_graph}

    (overlay
      :class "graph-overlay"

      (box
        :class "graph-box"

        (box
          :class "graph-wrapper ${name}-wrapper"

          (graph
            :value "${value}"
            :class "graph ${name}-graph"
            :line-style "round"
            :thickness 3
            :time-range "5m"
            :dynamic false
            :min 0
            :max 100
          )
        )
      )

      (label
        :class "graph-name"
        :halign "start"
        :valign "start"
        :text "${label}"
      )

      (label
        :class "graph-time"
        :halign "start"
        :valign "end"
        :text "5 minutes"
      )
    )
  )
)

(defwidget hardware-graphs []
  (box
    :orientation "vertical"
    :space-evenly false

    (box
      :space-evenly false
      :spacing 6

      (button
        :class "hw-graph-button ${hw_graph == 'cpu' ? 'hw-graph-button-active' : ''}"
        :onclick "${EWW_CMD} update hw_graph='cpu'"

        "CPU"
      )

      (button
        :class "hw-graph-button ${hw_graph == 'temp' ? 'hw-graph-button-active' : ''}"
        :onclick "${EWW_CMD} update hw_graph='temp'"

        "Temperature"
      )

      (button
        :class "hw-graph-button ${hw_graph == 'ram' ? 'hw-graph-button-active' : ''}"
        :onclick "${EWW_CMD} update hw_graph='ram'"

        "RAM"
      )

      (button
        :class "hw-graph-button ${hw_graph == 'gpu' ? 'hw-graph-button-active' : ''}"
        :onclick "${EWW_CMD} update hw_graph='gpu'"

        "GPU"
      )
    )

    (overlay
      (hardware-graph
        :name "cpu"
        :value "${EWW_CPU.avg}"
        :label "CPU: ${round(EWW_CPU.avg, 0)}%"
      )

      (hardware-graph
        :name "ram"
        :value "${memory}"
        :label "RAM: ${round(memory, 0)}%"
      )

      (hardware-graph
        :name "temp"
        :value "${temperature / 1000}"
        :label "Temperature: ${round(temperature / 1000, 0)} Â°C"
      )

      (hardware-graph
        :name "gpu"
        :value "${gpu}"
        :label "GPU: ${round(gpu, 0)}%"
      )
    )
  )
)

(defwidget hardware []
  (box
    :orientation "vertical"

    (hardware-graphs)
  )
)
