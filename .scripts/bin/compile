#!/bin/sh

compileFile() {
    ! [ -f "$1" ] && return 1

    dir=$(dirname "$1")
    file=$(basename -- "$1")
    ext="${file##*.}"
    file="${file%.*}"

    cmd="" # What to run to execute compiled code
    bin_file="" # Which file to remove after running the code

    case $ext in
        c)
            gcc -g -std=c99 -Wall "$1" -o "$dir/$file" -lm
            bin_file="$dir/$file"
            cmd="$dir/$file"
            ;;
        cpp)
            g++ -g -Wall -o "$dir/$file" -lm "$1"
            bin_file="$dir/$file"
            cmd="$dir/$file"
            ;;
        java)
            javac "$1"
            bin_file="$dir/$file.class"
            cmd="java $dir/$file"
            ;;
        py)
            bin_file=""
            cmd="python \"$1\""
            ;;
        tex)
            latexmk -pdf -shell-escape -bibtex "$1" > /dev/null && cp "$dir/.latex-cache/$file.pdf" "$dir"
            bin_file="$dir/$file.pdf ./.latex-cache"
            cmd="zathura $dir/$file.pdf"
            ;;
        s)
            gcc -g -Wall "$1" -o "$dir/$file" -lm
            bin_file="$dir/$file"
            cmd="$dir/$file"
            ;;
        *)
            bin_file=""
            cmd="$dir/$file"
            ;;
    esac

    printf "%sยง%s\n" "$bin_file" "$cmd"
}

compileMake() {
    make -Bnd | make2graph -f L | sed '/all\|\<ROOT\>/d' | head -1
}

path="$1"

if [ -d "$path" ] || [ "${path#*Makefile}" != "$path" ]
then
    compileMake "$path"
else
    compileFile "$path"
fi
