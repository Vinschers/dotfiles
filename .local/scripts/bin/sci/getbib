#!/bin/sh

zotero () {
    BIB_STR="$(curl -sd "$identifier" -H "Content-Type: text/plain" "http://localhost:1969/search")"

    if [ "$BIB_STR" = "No items returned from any translator" ] || [ "$BIB_STR" = "No identifiers found" ]
    then
        return 1
    fi

    URL="$(echo "$BIB_STR" | jq -r '.[0]?.url')"

    if [ "$URL" = "null" ]
    then
        JSON="$BIB_STR"
    else
        JSON="$(curl -fsd "$URL" -H "Content-Type: text/plain" "http://localhost:1969/web")"
    fi

    if [ -n "$BIB_FILE" ]
    then
        JSON_BIB="$(curl -fs --data-binary "@$BIB_FILE" -H "Content-Type: text/plain" "http://localhost:1969/import")"
        JSON="$(printf "%s\n%s" "$JSON_BIB" "$JSON" | jq -s "add")"
    fi
    curl -fsd "$JSON" -H "Content-Type: application/json" "http://localhost:1969/export?format=biblatex"
}

openlibrary () {
    JSON="$(curl -sd "https://openlibrary.org/isbn/$identifier" -H "Content-Type: text/plain" "http://localhost:1969/web" | jq ".[]? += {\"ISBN\": \"$identifier\"}")"

    if [ -n "$BIB_FILE" ]
    then
        JSON_BIB="$(curl -fs --data-binary "@$BIB_FILE" -H "Content-Type: text/plain" "http://localhost:1969/import")"
        JSON="$(printf "%s\n%s" "$JSON_BIB" "$JSON" | jq -s "add")"
    fi

    curl -fsd "$JSON" -H "Content-Type: application/json" "http://localhost:1969/export?format=biblatex"
}

input () {
    BIB_STR="$(vipe --suffix bib)"

    if [ -n "$BIB_FILE" ]
    then
        BIB_STR="$(cat "$BIB_FILE")\n$BIB_STR"
    fi

    printf "%s" "$BIB_STR"
}

[ -z "$1" ] && echo "No argument to getbib." && exit
identifier="$1"

[ -n "$2" ] && BIB_FILE="$2"

zotero || openlibrary || input
