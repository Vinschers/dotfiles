#!/bin/sh


add () {
    ID="$1"
    BIB_FILE="$2"

    if [ -f "$BIB_FILE" ]
    then
        grep -q "$ID" "$BIB_FILE" && return 1
    fi

    BIB_STR="$(getbib "$ID")"
    [ -z "$BIB_STR" ] && exit 1

    if ! [ -f "$BIB_FILE" ]
    then
        mkdir -p "$(dirname "$BIB_FILE")"
        touch "$BIB_FILE"
    fi

    echo "$BIB_STR" >> "$BIB_FILE"

    ID_TYPE="$(python -c "import bibtexparser; entry = bibtexparser.bparser.BibTexParser(common_strings=True).parse(\"\"\"$BIB_STR\"\"\").entries[0]; print(entry['ID'], entry['ENTRYTYPE'])")"
    ID="$(echo "$ID_TYPE" | awk '{print $1}')"
    TYPE="$(echo "$ID_TYPE" | awk '{print $2}')"

    PDF_PATH="$BIBLIOGRAPHY_DIRECTORY/$TYPE/$ID.pdf"

    [ -f "$PDF_PATH" ] && return 0

    URL="$(echo "$BIB_STR" | grep "url = " | cut -d "{" -f2 | cut -d "}" -f1)"

    [ -z "$URL" ] && notify-send "Coundn't find PDF online." && return 0

    URL="$(curl -w "%{url_effective}\n" -I -L -s -S "$URL" -o /dev/null)"
    URL="$(curl -sd "$URL" -H "Content-Type: text/plain" "http://localhost:1969/web" | jq -r 'map(select(.mimeType == "application/pdf")) | .[]?.url' | head -n 1)"

    DL_PATH="$(filedl "$URL")"

    mkdir -p "$(dirname "$PDF_PATH")"
    mv "$DL_PATH" "$PDF_PATH"
}

select_open () {
    BIB_FILE="$1"

    python -c "
import bibtexparser
import subprocess

def info_to_option(info: dict) -> str:
    return info['title'].replace('{', '').replace('}', '')

def select_result(matches: list[dict]) -> dict:
    try:
        options = {info_to_option(info): info for info in matches}

        options_process = subprocess.Popen(['echo', '-e', '\n'.join(options.keys())], stdout=subprocess.PIPE)
        selection_process = subprocess.Popen(['dmenu', '-i', '-l', '10'], stdin=options_process.stdout, stdout=subprocess.PIPE)

        selected = selection_process.communicate()[0].decode('utf-8', 'ignore').replace('\n', '')

        return options[selected]
    except (subprocess.CalledProcessError, KeyError):
        return {}


with open('$BIB_FILE', 'r') as bibfile:
    database = bibtexparser.bparser.BibTexParser(common_strings=True).parse_file(bibfile)

entry = select_result(database.entries)
if entry:
    print(entry['ID'], entry['ENTRYTYPE'])"
}

select_id () {
    BIB_FILE="$1"
    ID="$2"

    python -c "
import bibtexparser

def select_result(matches: list[dict]) -> dict:
    try:
        for entry in matches:
            for key, value in entry.items():
                if '$ID' in value:
                    return entry
    except (subprocess.CalledProcessError, KeyError):
        return {}


with open('$BIB_FILE', 'r') as bibfile:
    database = bibtexparser.bparser.BibTexParser(common_strings=True).parse_file(bibfile)

entry = select_result(database.entries)
if entry:
    print(entry['ID'], entry['ENTRYTYPE'])"
}

open () {
    ID="$1"
    BIB_FILE="$2"

    if [ -z "$ID" ]
    then
        RESULT="$(select_open "$BIB_FILE")"
    else
        RESULT="$(select_id "$BIB_FILE" "$ID")"
    fi

    [ -z "$RESULT" ] && return 0

    ID="$(echo "$RESULT" | awk '{print $1}')"
    TYPE="$(echo "$RESULT" | awk '{print $2}')"

    [ -z "$ID" ] && return 1

	PDF_PATH="$BIBLIOGRAPHY_DIRECTORY/$TYPE/$ID.pdf"

	if [ -f "$PDF_PATH" ]
	then
		sioyek "$PDF_PATH"
	else
		notify-send "PDF unavailable"
	fi
}

update_bibliography () {
    BIB_FILE="$1"
    BASE_DIR="$(dirname "$BIB_FILE")"

    mkdir -p "$BASE_DIR/bibliography"
    rm -rf "$BASE_DIR/bibliography/*"

    python -c "
import bibtexparser

with open('$BIB_FILE', 'r') as bibfile:
    database = bibtexparser.bparser.BibTexParser(common_strings=True).parse_file(bibfile)

    for entry in database.entries:
        print(entry['ENTRYTYPE'], entry['ID'])" > temp_type_ids

    while read -r TYPE_ID
    do
        TYPE="$(echo "$TYPE_ID" | awk '{print $1}')"
        ID="$(echo "$TYPE_ID" | awk '{print $2}')"

        mkdir -p "$BASE_DIR/bibliography/$TYPE"
        ln -s "$BIBLIOGRAPHY_DIRECTORY/$TYPE/$ID.pdf" "$BASE_DIR/bibliography/$TYPE/$ID.pdf"
    done < temp_type_ids

    rm temp_type_ids
}


GLOBAL_BIB="$BIBLIOGRAPHY_DIRECTORY/library.bib"

[ -z "$1" ] && open "" "$GLOBAL_BIB" && exit 0

BIB_FILE="$(find . -name "*.bib" -print -quit)"

case "$1" in
    add)
        shift

        add "$1" "$GLOBAL_BIB"

        if [ -f "$BIB_FILE" ]
        then
            add "$1" "$BIB_FILE"
        fi
        ;;

    open)
        shift

        ID="$1"
        ID="${ID#*"https://doi.org/"}"

        if [ -f "$BIB_FILE" ]
        then
            open "$ID" "$BIB_FILE"
        else
            open "$ID" "$GLOBAL_BIB"
        fi
        ;;

    update)
        [ -f "$BIB_FILE" ] && update_bibliography "$BIB_FILE"
        ;;

    *)
        ID="$1"
        ID="${ID#*"https://doi.org/"}"

        ADDED_GLOBAL="$(add "$ID" "$GLOBAL_BIB")"

        echo "$ADDED_GLOBAL"

        if [ -f "$BIB_FILE" ]
        then
            add "$ID" "$BIB_FILE" || open "$ID" "$BIB_FILE"
        elif [ "$ADDED_GLOBAL" ]
        then
            open "$ID" "$GLOBAL_BIB"
        fi
        ;;
esac

