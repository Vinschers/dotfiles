#!/bin/sh


download_doi () {
    ID="$1"
    BIB_STR="$2"
    PDF_PATH="$3"

    URL="$(echo "$BIB_STR" | grep "url = " | cut -d "{" -f2 | cut -d "}" -f1)"
    [ -z "$URL" ] && URL="https://doi.org/$ID"

    if curl -Isfo /dev/null "$URL"
    then
        URL="$(curl -sd "$URL" -H "Content-Type: text/plain" "http://localhost:1969/web" | jq -r 'map(select(.mimeType == "application/pdf")) | .[]?.url' | head -n 1)"
    else
        URL=""
    fi
    [ -z "$URL" ] && notify-send "Couldn't find PDF online." && return 0

    case "$URL" in
        *.pdf)
            curl -Ls "$URL" > "$PDF_PATH"
            ;;
        *)
    	    DL_PATH="$(filedl "$URL")"

    	    mv "$DL_PATH" "$PDF_PATH"
            ;;
    esac
}

download_isbn () {
    ISBN="$1"
    PDF_PATH="$2"

    option="$(printf "Yes\nNo" | dmenu -i -l 2 -p "Download from Library Genesis?")"

    [ "$option" != "Yes" ] && return 1

    md5="$(curl -s "https://libgen.li/json.php?object=e&isbn=$ISBN&fields=md5,title,year,edition,pages" | python -c "
import json
import subprocess
json_str = input()
data = json.loads(json_str)
if not data:
    print()
    exit()
options = {}
for _, book in data.items():
    for _, file in book['files'].items():
        md5 = file['md5']
        break

    option_name = f\"[{book['year']}] {book['title']} - {book['edition']} ({book['pages']} pages)\"

    options[option_name] = md5

options_process = subprocess.Popen(['echo', '-e', '\n'.join(options.keys())], stdout=subprocess.PIPE)
selection_process = subprocess.Popen(['dmenu', '-i', '-l', '10'], stdin=options_process.stdout, stdout=subprocess.PIPE)
selected = selection_process.communicate()[0].decode('utf-8', 'ignore').replace('\n', '')
if selected:
    print(options[selected])
else:
    print()")"

    [ -z "$md5" ] && return 1

    URL="https://libgen.rocks/$(curl -s "https://libgen.rocks/ads.php?md5=$md5" | grep "get.php" | grep -Po "<a\s+(?:[^>]*?\s+)?href=([\"'])(.*?)\1" | cut -d "\"" -f2 | cut -d "\"" -f1)"

    curl -sL "$URL" > "$PDF_PATH"
}

download_pdf () {
    ID="$1"
    TYPE="$2"
    BIB_STR="$3"

    PDF_PATH="$(sci_pdf_path "$BIB_STR")"

    [ -f "$PDF_PATH" ] && return 1
    mkdir -p "$(dirname "$PDF_PATH")"

    if [ "$TYPE" = "doi" ]
    then
        download_doi "$ID" "$BIB_STR" "$PDF_PATH" && notify-send "PDF downloaded." && return 0
    elif [ "$TYPE" = "isbn" ]
    then
        download_isbn "$ID" "$PDF_PATH" && notify-send "PDF downloaded." && return 0
    fi

    notify-send "Couldn't download PDF."
    return 1
}

add_global () {
    ID="$1"
    TYPE="$2"
    GLOBAL_BIB="$ACADEMIC_DIRECTORY/bibliography/library.bib"

    if [ -f "$GLOBAL_BIB" ] && grep -q "$ID" "$GLOBAL_BIB"
    then
        BIB_STR="$(awk -v RS='' -v id="$ID" 'BEGIN{gsub(/\(|\)/,"\\\\&", id)} $0 ~ id' "$GLOBAL_BIB")"

        if download_pdf "$ID" "$TYPE" "$BIB_STR"
        then
            echo "1"
        else
            echo "0"
        fi

        printf "\n%s\n" "$BIB_STR"
        return 0
    fi

    BIB_STR="$(getbib "$ID" "$GLOBAL_BIB")"
    [ -z "$BIB_STR" ] && exit 1

    if ! [ -f "$GLOBAL_BIB" ]
    then
        mkdir -p "$(dirname "$GLOBAL_BIB")"
        touch "$GLOBAL_BIB"
    fi

    echo "$BIB_STR" > "$GLOBAL_BIB"

    notify-send "Added to global library."

    download_pdf "$ID" "$TYPE" "$BIB_STR"

    echo "1"
    echo "$BIB_STR"
}


TYPE="$1"
ID="$2"

[ -f "$3" ] && BIB_FILE="$3"


RET_GLOBAL="$(add_global "$ID" "$TYPE")"
DIFF="$(echo "$RET_GLOBAL" | head -n 1)"
BIB_STR="$(echo "$RET_GLOBAL" | tail -n +2)"

if [ -n "$BIB_STR" ] && [ -f "$BIB_FILE" ] && ! grep -q "$ID" "$BIB_FILE"
then
    echo "$BIB_STR" >> "$BIB_FILE"
    notify-send "Added to local library."

    DIFF="1"
fi

echo "$DIFF"
